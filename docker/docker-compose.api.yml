version: '3.8'

services:
  api:
    build:
      context: ..
      dockerfile: docker/Dockerfile.api
    container_name: metadata-builder-api
    ports:
      - "8000:8000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_API_BASE_URL=${OPENAI_API_BASE_URL:-https://api.openai.com/v1}
      - OPENAI_API_MODEL=${OPENAI_API_MODEL:-gpt-4-turbo-preview}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - ENABLE_TOKEN_TRACKING=${ENABLE_TOKEN_TRACKING:-true}
      - MAX_TOKENS_PER_REQUEST=${MAX_TOKENS_PER_REQUEST:-8192}
      - MAX_RETRY_ATTEMPTS=${MAX_RETRY_ATTEMPTS:-3}
      - RETRY_INITIAL_WAIT_SECONDS=${RETRY_INITIAL_WAIT_SECONDS:-1}
      - RETRY_MAX_WAIT_SECONDS=${RETRY_MAX_WAIT_SECONDS:-10}
    volumes:
      - ../metadata:/app/metadata
      - ../configs/.config.yaml:/app/.config.yaml:ro
      - ../logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  redis:
    image: redis:7-alpine
    container_name: metadata-builder-redis
    ports:
      - "6379:6379"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional: Add a PostgreSQL database for testing
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=testdb
      - POSTGRES_USER=testuser
      - POSTGRES_PASSWORD=testpass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    profiles:
      - with-db

volumes:
  postgres_data: 